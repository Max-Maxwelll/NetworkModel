#pragma checksum "C:\Users\Maksym\Desktop\NetworkModel\NetworkModel\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fb68ebe77bef175450cebdbb038d18bfbac266cd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(NetworkModel.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace NetworkModel.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Maksym\Desktop\NetworkModel\NetworkModel\Pages\_ViewImports.cshtml"
using NetworkModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Maksym\Desktop\NetworkModel\NetworkModel\Pages\Index.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fb68ebe77bef175450cebdbb038d18bfbac266cd", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a96e66ebd0a95cfc012c799b6a3dc9a768d2340e", @"/Pages/_ViewImports.cshtml")]
    #nullable restore
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "C:\Users\Maksym\Desktop\NetworkModel\NetworkModel\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>
    #mynetwork {
        width: 100%;
        height: 800px;
        border: 1px solid lightgray;
    }
    .menu-body {
        position: absolute;
        top: 0;
        left: 0;
        display: none;
    }
</style>
<div class=""text-center body"">
    <h4 class=""float-left p-1"">Performance: <span>");
#nullable restore
#line 21 "C:\Users\Maksym\Desktop\NetworkModel\NetworkModel\Pages\Index.cshtml"
                                             Write(Model.Performance);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</span> s</h4>
    <div id=""mynetwork""></div>
    <div id=""menu-body"" class=""card"">
        <div class=""card-body"">
            <h4 id=""selectedNodeLable"" class=""float-left"">Selected: <span></span></h4>
            <button id=""menu-regions"" class=""btn btn-primary float-right m-1"" data-nodeid=""0"">Regions</button>
            <button id=""menu-distances"" class=""btn btn-success float-right m-1"" data-nodeid=""0"">Distances</button>
            <button id=""menu-delete"" class=""btn btn-danger float-right m-1"" data-nodeid=""0"">Delete</button>
        </div>
    </div>
    <div class=""container"">
        <div class=""row"">
            <div class=""card col"">
                <div class=""card-body deleted"">
                </div>
            </div>
            <div class=""card col"">
                <div class=""card-body added"">
                </div>
            </div>
        </div>
    </div>
</div>
<script type=""text/javascript"">
    $(function () {
        // ELEMENTS
        var container = docu");
            WriteLiteral(@"ment.getElementById(""mynetwork"");
        var deletedColumn = $('.deleted').first();
        var addedColumn = $('.added').first();
        var deleteButton = $('#menu-delete').first();
        var distancesButton = $('#menu-distances').first();
        var regionsButton = $('#menu-regions').first();
        var selectedNodeLable = $('#selectedNodeLable').first().children('span').first();
        var tree = ");
#nullable restore
#line 54 "C:\Users\Maksym\Desktop\NetworkModel\NetworkModel\Pages\Index.cshtml"
              Write(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Tree.Select(x => x.Value), Formatting.Indented)));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n\r\n        // VARIABLES\r\n        var network;\r\n        var nodes = ");
#nullable restore
#line 58 "C:\Users\Maksym\Desktop\NetworkModel\NetworkModel\Pages\Index.cshtml"
               Write(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Nodes, Formatting.Indented)));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n        var edges = ");
#nullable restore
#line 59 "C:\Users\Maksym\Desktop\NetworkModel\NetworkModel\Pages\Index.cshtml"
               Write(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Edges, Formatting.Indented)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";

        // settings for network model
        var data = {
            nodes: nodes,
            edges: edges,
        };
        var options = {
            layout: {
                randomSeed : 0,
                hierarchical: {
                    treeSpacing: 600
                },
            },
            nodes: {
                shape: ""dot"",
                size: 10,
            },
        };

        // FUNCTIONS
        function redrawAll(nodesEdges) {
            network = new vis.Network(container, nodesEdges, options);
            network.on(""selectNode"", function (params) {
                deleteButton.data('nodeid', params.nodes[0]);
                distancesButton.data('nodeid', params.nodes[0]);
                var node = data.nodes.filter(function (value, index) {
                    if(params.nodes[0] == value.id) return true;
                })[0];
                //console.log(node);
                selectedNodeLable.empty().append(node.label+' '+'<span ");
            WriteLiteral(@"class=""badge bg-dark text-white"">'+node.id +'</span>');
                //console.log(params);
            });
        }
        function deleteNode() {
            //console.log('DELETING NODE ' + deleteButton.data('nodeid'));
            var node = getNode();

            $.ajax({
                type: ""POST"",
                url: ""api/Network/Delete"",
                data: JSON.stringify({ node: node, nodes: data.nodes, edges: data.edges }),
                success: function (result) {
                    var deleted = result.changes.filter(function (value, index) { return value.isDeleted; });
                    var added = result.changes.filter(function (value, index) { return value.isAdded; });
                    deletedColumn.empty();
                    addedColumn.empty();
                    //console.log(result.nodes)
                    //console.log('deleted: ' + deleted.length);

                    deleted.forEach(function (value) {
                        deletedColumn.ap");
            WriteLiteral(@"pend('<h4 style=""color: red;"">' + value.description + '</h3>');
                    });
                    added.forEach(function (value) {
                        addedColumn.append('<h4 style=""color: green"">' + value.description + '</h4>');
                    });

                    data.nodes = result.nodes;
                    data.edges = result.edges;
                    tree = result.tree;
                    redrawAll(data);
                },
                headers: { 'Content-Type': 'application/json' }
            });
        }

        function getDistances() {
            var node = getNode();

            $.ajax({
                type: ""POST"",
                url: ""api/Network/GetDistances"",
                data: JSON.stringify({ node: node, nodes: data.nodes }),
                success: function (result) {
                    var distances = [];
                    result.forEach(function (value) {
                        distances.push({ from: node.label, to: findN");
            WriteLiteral(@"ode(value.node.id).label, distance: value.dis });
                    });
                    console.log(distances);
                },
                headers: { 'Content-Type': 'application/json' }
            });
        }

        function getRegions() {
            var node = getNode();

            $.ajax({
                type: ""POST"",
                url: ""api/Network/GetRegions"",
                data: JSON.stringify({ Current: node.id, Tree: tree }),
                success: function (result) {
                    data.nodes.forEach(function (element, index) {

                        if (result.innerRegion.includes(element.id)) {
                            element.color = 'blue';
                        }
                        if (result.outerRegion.includes(element.id)) {
                            element.color = 'green';
                        }
                    });
                    redrawAll(data);
                },
                headers: { 'Content-Type");
            WriteLiteral(@"': 'application/json' }
            });
        }

        function getNode() {
            return findNode(deleteButton.data('nodeid'));
        }

        function findNode(id) {
            return nodes.find(element => element.id === id);
        }

        // EVENTS
        deleteButton.on('click', function (element, event) {
            deleteNode();
        });

        distancesButton.on('click', function (element, event) {
            getDistances();
        })

        regionsButton.on('click', function (element, event) {
            getRegions();
        });

        // EXECUTE
        redrawAll(data);
        console.log(tree);
    });
</script>
");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; } = default!;
        #nullable disable
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
